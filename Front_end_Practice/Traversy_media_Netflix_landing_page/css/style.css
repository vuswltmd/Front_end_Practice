:root {
    --primary-color: #e50914;
    --dark-cololr: #141414;
}

/* root 가상 클래스, :root 선택자는 웹 문서 구조에서 가장 상위요소를 선택할 때 사용한다. */

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Arial', sans-serif;
    -webkit-font-smoothing: antialiased;
    background: #000;
    color: #999;
}

ul {
    list-style: none;
}

h1,
h2,
h3,
h4 {
    color: #fff;
}

a {
    color: #fff;
    text-decoration: none;
}

p {
    /* html기본이 16px이므로 0.5rem은 8px이다. */
    margin: 0.5rem 0;
}

img {
    width: 100%;
}

.showcase {
    width: 100%;
    height: 93vh;
    position: relative;
    background: url('../img/background.jpg') no-repeat center center/cover
}

/* z-index -> z축 방향으로 쌓여있는 순서를 바꿔줄 수 있다. 정수로 어떤 값을 지정해주면 정수값이 낮은 것부터 높은 순서대로
쌓아올라간다 */
.showcase::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    background: rgba(0, 0, 0, 0.6);
    box-shadow: inset 120px 100px 250px #000000, inset -120px -100px 250px #000000;
    /* inset -> 그림자를 안쪽에 만든다  */
}

.showcase-top {
    position: relative;
    z-index: 2;
    height: 90px;
}

.showcase-top img {
    width: 170px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.showcase-top a {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translate(-50%, -50%);
}

/* justify-content -> 메인축 방향으로 아이템을들 정렬하는 속성이에요.
align-items -> justify-content와 수직 방향의 정렬이라고 생각하시면 됩니다. */
.showcase-content {
    position: relative;
    z-index: 2;
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    margin-top: 9rem;
}

.showcase-content h1 {
    font-weight: 700;
    font-size: 5.2rem;
    line-height: 1.1;
    /* line-height-> 줄 높이를 정하는 속성 */
    margin: 0 0 2rem;
    /* 3개의 margin 속성값을 가질 때는 top, (right와 left)한묶음, bottom 순으로 설정합니다. */
}

.showcase-content p {
    text-transform: uppercase;
    color: #fff;
    font-weight: 400;
    font-size: 1.9rem;
    line-height: 1.25;
    margin: 0 0 2rem;
}

/* Tabs */
.tabs {
    background: var(--dark-cololr);
    padding-top: 1rem;
    border-bottom: 3px solid #3d3d3d;
}

.tabs .container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /*repeat(3, 1fr) 는 1fr 1fr 1fr과 같다 */
    grid-gap: 1rem;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.tabs p {
    font-size: 1.2rem;
    padding-top: 0.5rem;
}

.tabs .container>div {
    padding: 1.5rem 0;
}

.tabs .container>div:hover {
    color: #fff;
    cursor: pointer;
}

.tab-border {
    border-bottom: var(--primary-color) 4px solid;
}

/*Tab content */
.tab-content {
    padding: 3rem 0;
    background: #000;
    color: #fff;
}

#tab-1-content .tab-1-content-inner {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem;
    align-items: center;
    justify-content: center;
}

#tab-2-content .tab-2-content-top {
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-gap: 2rem;
    justify-content: center;
    align-items: center;
}

#tab-2-content .tab-2-content-bottom {
    margin-top: 2rem;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1rem;
    justify-content: center;
    align-items: center;
    text-align: center;
}

.table {
    width: 100%;
    margin-top: 2rem;
    border-collapse: collapse;
    border-spacing: 0;
    /* border-spacing으로 표(table)의 테두리와 셀(td)의 테두리 사이의 간격을 정합니다. */
}

.table thead th {
    text-transform: uppercase;
    padding: 0.8rem;
}

.table tbody tr td {
    color: #999;
    padding: 0.8rem 1.2em;
    text-align: center;
}

/* :first-child 는 자식요소 중에 가장 첫번째를 선택하는 가상클래스입니다. */
.table tbody tr td:first-child {
    text-align: left;
}

.table tbody tr:nth-child(odd) {
    background: #222;
}

/* Container */
.container {
    max-width: 70%;
    margin: auto;
    overflow: hidden;
    padding: 0 2rem;
}

/* Text style */
.text-xl {
    font-size: 2rem;
    margin-bottom: 1rem;
}

.text-lg {
    font-size: 1.8rem;
    margin-bottom: 1rem;
}

.text.md {
    font-size: 1.5rem;
    margin-bottom: 1rem;
}

.text-center {
    text-align: center;
}

.text-dark {
    color: #999
}

/* Buttons */
.btn {
    display: inline-block;
    background: var(--primary-color);
    color: #fff;
    padding: 0.4rem 1.3rem;
    font-size: 1rem;
    text-align: center;
    border: none;
    cursor: pointer;
    margin-right: 0.5rem;
    outline: none;
    box-shadow: 0px 1px 0 rgba(0, 0, 0, 0.45);
    border-radius: 2px;
}

/* :hover의 효과 -> 마우스를 올렸을 때 태그를 선택하는 가상 클래스, 마우스를 올렸을 때 반응을 살펴보자.*/
.btn:hover {
    opacity: 0.9;
}

.btn-rounded {
    border-radius: 5px;
}

.btn-xl {
    font-size: 2rem;
    padding: 1.5rem 2.1rem;
    text-transform: uppercase;
}

.btn-lg {
    font-size: 1rem;
    padding: 0.8rem 1.3rem;
    text-transform: uppercase;
}